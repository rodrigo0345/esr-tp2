syntax = "proto3";

option go_package = "github.com/rodrigo0345/esr-tp2/config/protobuf";

package video;

////////////////////////////////////////////////////////////////////////////////////////////////////
// Global - Formato a usar para todas as mensagens
////////////////////////////////////////////////////////////////////////////////////////////////////

message Header {
  string sender = 1;
  repeated string target = 2;
  RequestType type = 3;
  int32 length = 4;
  int64 timestamp = 5;
  int32 max_hops = 16;

  oneof content {
    ClientCommand client_command = 6;
    ServerVideoChunk server_video_chunk = 7;
    DistanceVectorRouting distance_vector_routing = 8;
    BootstraperResult bootstraper_result = 11;
  }

  string client_port = 9;
  // coloquei no header para n ter de haver tanto processamento de header e body
  string RequestedVideo = 10;
  string path = 12;
  int64 seq_id = 13;
  int32 hops = 14;
}

enum RequestType {
  ROUTINGTABLE = 0;
  RETRANSMIT = 1;
  HEARTBEAT = 2;
  BOOTSTRAPER = 3;
  CLIENT_PING = 5;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// Bootstraper
////////////////////////////////////////////////////////////////////////////////////////////////////

message BootstraperResult { repeated string neighbors = 1; }

////////////////////////////////////////////////////////////////////////////////////////////////////
// Client to Server
////////////////////////////////////////////////////////////////////////////////////////////////////

message ClientCommand {
  PlayerCommand command = 1;
  string AdditionalInformation = 2;
}

enum PlayerCommand {
  PLAY = 0;
  STOP = 1;
}

message ServerVideoChunk {
  int32 sequence_number = 1; // Order of this chunk in the video stream
  int64 timestamp = 2;       // Timestamp of the chunk in milliseconds
  VideoFormat format = 3;    // Video format (MP4, MKV, etc.)
  bytes data = 4;            // The raw video chunk data (as byte array)
  bool is_last_chunk = 5;    // Flag to indicate if this is the last chunk

  int32 bitrate_kbps = 6;          // Bitrate in kilobits per second
  int32 width = 7;                  // Width of the video in pixels
  int32 height = 8;                 // Height of the video in pixels
  double fps = 9;                   // Frames per second
  int64 latency_ms = 10;            // Latency in milliseconds (if measurable)
  int32 current_bitrate_kbps = 11;  // Current bitrate in kilobits per second
  int32 previous_bitrate_kbps = 12; // Previous bitrate before adaptation
}

enum VideoFormat {
  UNKNOWN = 0;
  MP4 = 1;
  MKV = 2;
  AVI = 3;
  WEBM = 4;
  MJPEG = 5;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// Presence
////////////////////////////////////////////////////////////////////////////////////////////////////
message Interface {
  string ip = 1;
  int32 port = 2;
}

message NextHop {
  Interface next_node = 1;
  int64 distance = 2;
}

message DistanceVectorRouting {
  map<string, NextHop> entries = 1;
  Interface source = 2;
}
